{"ast":null,"code":"import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-customhook-388f8-default-rtdb.firebaseio.com/cart.json');\n\n      if (!response.ok) {\n        throw new Error('Could not fetch cart');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Fetching cart data failed\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-customhook-388f8-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart Data Failed...\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sent cart data successful\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sending cart data failed\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["C:/projects/react13-reduxx/01-starting-project/src/store/cart-actions.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEC,OAAO,MAAMC,aAAa,GAAE,MAAI;AAC5B,SAAO,MAAOC,QAAP,IAAoB;AACxB,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sEAAF,CAA5B;;AAGA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACH,KAVD;;AAYA,QAAG;AACH,YAAME,QAAQ,GAAI,MAAOP,SAAS,EAAlC;AACAD,MAAAA,QAAQ,CAACF,WAAW,CAACW,WAAZ,CAAwBD,QAAxB,CAAD,CAAR;AAEC,KAJD,CAIC,OAAME,KAAN,EAAY;AACTV,MAAAA,QAAQ,CACJH,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,OAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADI,CAAR;AAQH;AACC,GA3BL;AA4BH,CA7BM;AA+BR,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOhB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sEAD0B,EAE1B;AACEe,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACd,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;AACF,KAZD;;AAcA,QAAI;AACF,YAAMY,WAAW,EAAjB;AACAjB,MAAAA,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,SAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KATD,CASE,OAAOJ,KAAP,EAAc;AACdV,MAAAA,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,OAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GAzCD;AA0CD,CA3CI","sourcesContent":["import { uiActions } from './ui-slice';\r\nimport { cartActions } from './cart-slice';\r\n\r\n export const fetchCartData =()=>{\r\n     return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch( 'https://react-customhook-388f8-default-rtdb.firebaseio.com/cart.json'\r\n            );\r\n\r\n            if(!response.ok){\r\n                throw new Error('Could not fetch cart');\r\n            }\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        };\r\n\r\n        try{\r\n        const cartData =  await  fetchData();\r\n        dispatch(cartActions.replaceCart(cartData));\r\n\r\n        }catch(error){\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: \"error\",\r\n                  title: \"Error\",\r\n                  message: \"Fetching cart data failed\",\r\n                })\r\n              );\r\n      \r\n        }\r\n         };\r\n };\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"Sending...\",\r\n          message: \"Sending cart data\",\r\n        })\r\n      );\r\n  \r\n      const sendRequest = async () => {\r\n        const response = await fetch(\r\n          \"https://react-customhook-388f8-default-rtdb.firebaseio.com/cart.json\",\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(cart),\r\n          }\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(\"Sending Cart Data Failed...\");\r\n        }\r\n      };\r\n      \r\n      try {\r\n        await sendRequest();\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: \"success\",\r\n            title: \"Success\",\r\n            message: \"Sent cart data successful\",\r\n          })\r\n        );\r\n      } catch (error) {\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: \"error\",\r\n            title: \"Error\",\r\n            message: \"Sending cart data failed\",\r\n          })\r\n        );\r\n      }\r\n    };\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}